version: 2.1

jobs:
  build-arm64:
    working_directory: ~/app
    resource_class: arm.large
    docker:
      - image: cimg/base:current-22.04
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build ARM64 Docker image
          command: |
            chmod +x build.sh
            ./build.sh "$DOCKERHUB_USERNAME/$DOCKER_IMAGE:arm64-edge"
      - run:
          name: Push ARM64 Docker Image
          command: |
            echo "Logging into Docker Hub..."
            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
            docker push $DOCKERHUB_USERNAME/$DOCKER_IMAGE:arm64-edge
      - run:
          name: Save ARM64 Docker Image
          command: |
            docker save -o arm64.tar $DOCKERHUB_USERNAME/$DOCKER_IMAGE:arm64-edge
      - persist_to_workspace:
          root: .
          paths:
            - arm64.tar

  build-amd64:
    working_directory: ~/app
    resource_class: large
    docker:
      - image: cimg/base:current-22.04
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build AMD64 Docker image
          command: |
            chmod +x build.sh
            ./build.sh "$DOCKERHUB_USERNAME/$DOCKER_IMAGE:amd64-edge"
      - run:
          name: Push AMD64 Docker Image
          command: |
            echo "Logging into Docker Hub..."
            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
            docker push $DOCKERHUB_USERNAME/$DOCKER_IMAGE:amd64-edge
      - run:
          name: Save AMD64 Docker Image
          command: |
            docker save -o amd64.tar $DOCKERHUB_USERNAME/$DOCKER_IMAGE:amd64-edge
      - persist_to_workspace:
          root: .
          paths:
            - amd64.tar

  create-manifest-edge:
    docker:
      - image: cimg/base:current-22.04
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Load Docker Images
          command: |
            docker load -i arm64.tar
            docker load -i amd64.tar
      - run:
          name: Create and Push Edge Multi-Arch Manifest
          command: |
            echo "Logging into Docker Hub..."
            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin

            echo "Creating multi-arch manifest for edge..."
            docker manifest create $DOCKERHUB_USERNAME/$DOCKER_IMAGE:edge \
              $DOCKERHUB_USERNAME/$DOCKER_IMAGE:amd64-edge \
              $DOCKERHUB_USERNAME/$DOCKER_IMAGE:arm64-edge
            docker manifest annotate $DOCKERHUB_USERNAME/$DOCKER_IMAGE:edge $DOCKERHUB_USERNAME/$DOCKER_IMAGE:amd64-edge --arch amd64
            docker manifest annotate $DOCKERHUB_USERNAME/$DOCKER_IMAGE:edge $DOCKERHUB_USERNAME/$DOCKER_IMAGE:arm64-edge --arch arm64
            docker manifest push $DOCKERHUB_USERNAME/$DOCKER_IMAGE:edge

  create-manifest-versioned:
    docker:
      - image: cimg/base:current-22.04
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Load Docker Images
          command: |
            docker load -i arm64.tar
            docker load -i amd64.tar
      - run:
          name: Create and Push Versioned Multi-Arch Manifest
          command: |
            echo "Logging into Docker Hub..."
            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin

            echo "Tagging and pushing versioned images..."
            docker tag $DOCKERHUB_USERNAME/$DOCKER_IMAGE:amd64-edge $DOCKERHUB_USERNAME/$DOCKER_IMAGE:amd64-$CIRCLE_TAG
            docker tag $DOCKERHUB_USERNAME/$DOCKER_IMAGE:arm64-edge $DOCKERHUB_USERNAME/$DOCKER_IMAGE:arm64-$CIRCLE_TAG

            docker push $DOCKERHUB_USERNAME/$DOCKER_IMAGE:amd64-$CIRCLE_TAG
            docker push $DOCKERHUB_USERNAME/$DOCKER_IMAGE:arm64-$CIRCLE_TAG

            echo "Creating and pushing latest multi-arch manifest..."
            docker manifest create $DOCKERHUB_USERNAME/$DOCKER_IMAGE:latest \
              $DOCKERHUB_USERNAME/$DOCKER_IMAGE:amd64-$CIRCLE_TAG \
              $DOCKERHUB_USERNAME/$DOCKER_IMAGE:arm64-$CIRCLE_TAG
            docker manifest push $DOCKERHUB_USERNAME/$DOCKER_IMAGE:latest

workflows:
  version: 2
  deploy:
    jobs:
      - build-arm64:
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
            branches:
              only: main
      - build-amd64:
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
            branches:
              only: main
      - create-manifest-edge:
          requires:
            - build-arm64
            - build-amd64
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
            branches:
              only: main
      - create-manifest-versioned:
          requires:
            - build-arm64
            - build-amd64
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
