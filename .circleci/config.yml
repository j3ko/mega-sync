version: 2.1
jobs:
  build-arm:
    working_directory: ~/app
    resource_class: arm.large
    docker:
      - image: cimg/base:current-22.04
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build ARM Docker image
          command: |
            echo "Building ARM Docker image..."
            docker build --platform linux/arm64 -t $DOCKERHUB_USERNAME/$DOCKER_IMAGE:arm64-$CIRCLE_TAG .

      - run:
          name: Push ARM Docker image
          command: |
            echo "Logging into Docker Hub..."
            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
            docker push $DOCKERHUB_USERNAME/$DOCKER_IMAGE:arm64-$CIRCLE_TAG

  build-amd64:
    working_directory: ~/app
    resource_class: large
    docker:
      - image: cimg/base:current-22.04
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build AMD64 Docker image
          command: |
            echo "Building AMD64 Docker image..."
            docker build --platform linux/amd64 -t $DOCKERHUB_USERNAME/$DOCKER_IMAGE:amd64-$CIRCLE_TAG .

      - run:
          name: Push AMD64 Docker image
          command: |
            echo "Logging into Docker Hub..."
            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
            docker push $DOCKERHUB_USERNAME/$DOCKER_IMAGE:amd64-$CIRCLE_TAG

  create-manifest:
    docker:
      - image: cimg/base:current-22.04
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Create and Push Multi-Arch Manifest
          command: |
            echo "Logging into Docker Hub..."
            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin

            echo "Creating multi-arch manifest..."
            docker manifest create $DOCKERHUB_USERNAME/$DOCKER_IMAGE:$CIRCLE_TAG \
              $DOCKERHUB_USERNAME/$DOCKER_IMAGE:amd64-$CIRCLE_TAG \
              $DOCKERHUB_USERNAME/$DOCKER_IMAGE:arm64-$CIRCLE_TAG

            echo "Annotating the manifest..."
            docker manifest annotate $DOCKERHUB_USERNAME/$DOCKER_IMAGE:$CIRCLE_TAG $DOCKERHUB_USERNAME/$DOCKER_IMAGE:amd64-$CIRCLE_TAG --arch amd64
            docker manifest annotate $DOCKERHUB_USERNAME/$DOCKER_IMAGE:$CIRCLE_TAG $DOCKERHUB_USERNAME/$DOCKER_IMAGE:arm64-$CIRCLE_TAG --arch arm64

            echo "Pushing the manifest..."
            docker manifest push $DOCKERHUB_USERNAME/$DOCKER_IMAGE:$CIRCLE_TAG

            echo "Tagging as 'latest'..."
            docker manifest create $DOCKERHUB_USERNAME/$DOCKER_IMAGE:latest \
              $DOCKERHUB_USERNAME/$DOCKER_IMAGE:amd64-$CIRCLE_TAG \
              $DOCKERHUB_USERNAME/$DOCKER_IMAGE:arm64-$CIRCLE_TAG

            docker manifest push $DOCKERHUB_USERNAME/$DOCKER_IMAGE:latest

workflows:
  version: 2
  tag-and-deploy:
    jobs:
      - build-arm:
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
      - build-amd64:
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
      - create-manifest:
          requires:
            - build-arm
            - build-amd64
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
